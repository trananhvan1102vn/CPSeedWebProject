@model CPSeed.Models.ExternalLoginConfirmationViewModel
@{
    ViewBag.Title = "Register";
}

<section class="section-main shadow-sm padding-y-sm">
    <div class="container">
        <div>
            @using (Html.BeginForm("ExternalLoginConfirmation", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "", role = "form" })) {
                @Html.AntiForgeryToken()
                <header class="section-heading heading-line">
                    <h4 class="title-section bg-white text-uppercase">Liên kết với tài khoản @ViewBag.LoginProvider của bạn.</h4>
                </header>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <p class="text-info">
                    Bạn đã xác thực thành công với <strong>@ViewBag.LoginProvider</strong>.
                    Vui lòng nhập thông tin tài khoản cho trang web này bên dưới và nhấp vào nút Đăng ký để hoàn tất đăng nhập.
                </p>

                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Email, new { @class = "control-label" })
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>    <div class="form-group">
                            @Html.LabelFor(m => m.FullName, new { @class = "control-label" })
                            @Html.TextBoxFor(m => m.FullName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.FullName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="row">
                            <div class="col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.Gender, new { @class = "control-label" })
                                    @Html.DropDownListFor(m => m.Gender, (new SelectList(new string[] { "Nam", "Nữ", "Khác" })), "", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-sm-6">
                                <div class="form-group">
                                    @Html.LabelFor(m => m.BirthDate, new { @class = "control-label" })
                                    @*@Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })*@

                                    @Html.TextBoxFor(m => m.BirthDate, "{0:dd/MM/yyyy}", new { @class = "form-control", type = "date" })
                                    @Html.ValidationMessageFor(m => m.BirthDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.Address, new { @class = "control-label" })
                            @Html.TextAreaFor(m => m.Address, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-success"><i class="fa fa-sign-in-alt"></i> Đăng ký</button>
                </div>
            }
        </div>
    </div>
</section>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
