@model CPSeed.Models.BannerCategory

@{
    ViewBag.Title = "Danh mục biểu ngữ";
}


@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    <div class="page-header">
        <div class="row">
            <div class="col-sm-7">
                <h1>
                    Tạo danh mục
                    <small>
                        <a href="@Href("~/Admin/BannerCategory")" class=""><i class="fa fa-reply"></i> Trở về danh sách</a>
                    </small>
                </h1>
            </div>
            <div class="col-sm-5">
                <div class="form-group">
                    <div class="pull-right">
                        <button type="submit" name="btnSubmit" value="Exit" class="btn btn-primary btn-sm"><i class="fa fa-save"></i> Lưu</button>
                        <button type="submit" name="btnSubmit" value="Continue" class="btn btn-success btn-sm"><i class="fa fa-save"></i> Lưu và tiếp tục chỉnh sửa</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrderNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrderNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrderNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <a href="@Href("~/Admin/BannerCategory")" class="btn btn-warning btn-sm"><i class="fa fa-reply"></i> Trở về danh sách</a>
                <button type="submit" name="btnSubmit" value="Exit" class="btn btn-primary btn-sm"><i class="fa fa-save"></i> Lưu</button>
                <button type="submit" name="btnSubmit" value="Continue" class="btn btn-success btn-sm"><i class="fa fa-save"></i> Lưu và tiếp tục chỉnh sửa</button>

            </div>
        </div>
    </div>
}


@section styles{
    <link href="~/Areas/Admin/Assets/bootstrap-touchspin/jquery.bootstrap-touchspin.css" rel="stylesheet" />
}
@section scripts{
    <script src="~/Areas/Admin/Assets/ckeditor/ckeditor.js"></script>
    <script src="~/Areas/Admin/Assets/ckeditor/lang/vi.js"></script>
    <script src="~/Areas/Admin/Assets/ckfinder/ckfinder.js"></script>
    <script src="~/Areas/Admin/Assets/bootstrap-touchspin/jquery.bootstrap-touchspin.js"></script>

    <script>
        $(document).ready(function () {
            $("input[name='OrderNo']").TouchSpin({
                verticalbuttons: true,
                verticalupclass: 'glyphicon glyphicon-plus',
                verticaldownclass: 'glyphicon glyphicon-minus'
            });

            var editor = CKEDITOR.replace('Description', {
                height: 400
            });
            CKFinder.setupCKEditor(editor, '/Areas/Admin/Assets/ckfinder');
        });
        function BrowseServer() {
            // You can use the "CKFinder" class to render CKFinder in a page:
            var finder = new CKFinder();
            finder.basePath = '~/ckfinder';	// The path for the installation of CKFinder (default = "/ckfinder/").
            finder.selectActionFunction = SetFileField;
            finder.popup();
        }
        // This is a sample function which is called when a file is selected in CKFinder.
        function SetFileField(fileUrl) {
            document.getElementById('Image').value = fileUrl;
        }
    </script>
}