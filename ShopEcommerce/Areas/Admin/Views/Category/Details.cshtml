@model CPSeed.Models.ProductCategory

@{
    ViewBag.Title = "Danh mục sản phẩm";
}


@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()

    <div class="page-header">
        <div class="row">
            <div class="col-sm-7">
                <h1>
                    Tạo danh mục
                    <small>
                        <a href="@Href("~/Admin/Category")" class=""><i class="fa fa-reply"></i> Trở về danh sách</a>
                    </small>
                </h1>
            </div>
            <div class="col-sm-5">
                <div class="form-group">
                    <div class="pull-right">
                        <button type="submit" name="btnSubmit" value="Exit" class="btn btn-primary btn-sm"><i class="fa fa-save"></i> Lưu</button>
                        <button type="submit" name="btnSubmit" value="Continue" class="btn btn-success btn-sm"><i class="fa fa-save"></i> Lưu và tiếp tục chỉnh sửa</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="form-horizontal">
        <div class="tabbable">
            <ul class="nav nav-tabs" id="myTab">
                <li class="active">
                    <a data-toggle="tab" href="#general-info">
                        <i class="green ace-icon fa fa-home bigger-120"></i>
                        Thông tin chung
                    </a>
                </li>
                <li>
                    <a data-toggle="tab" href="#product-list">
                        Danh sách sản phẩm
                    </a>
                </li>
            </ul>

            <div class="tab-content">
                <div id="general-info" class="tab-pane fade in active">

                    <div class="">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)

                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                <div class="input-group">
                                    @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                                    <span class="input-group-btn">
                                        <button class="btn btn-sm btn-default" type="button" onclick="selectFileWithCKFinder('Image');">
                                            <i class="ace-icon fa fa-search bigger-110"></i>
                                            Chọn ảnh
                                        </button>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.OrderNo, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.OrderNo, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.OrderNo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ParentId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.ParentId, (SelectList)ViewBag.ProductCategories, "", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ParentId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <a href="@Href("~/Admin/Category")" class="btn btn-warning btn-sm"><i class="fa fa-reply"></i> Trở về danh sách</a>
                                    <button type="submit" name="btnSubmit" value="Exit" class="btn btn-primary btn-sm"><i class="fa fa-save"></i> Lưu</button>
                                    <button type="submit" name="btnSubmit" value="Continue" class="btn btn-success btn-sm"><i class="fa fa-save"></i> Lưu và tiếp tục chỉnh sửa</button>

                                </div>
                            </div>*@
                    </div>
                </div>
                <div id="product-list" class="tab-pane fade">
                    @if (Model.Id == new Guid()) {
                        <div class="well well-sm">
                            Bạn cần lưu danh mục trước khi có thể dùng chức năng này.
                        </div>
                    } else {
                        var products = (List<CPSeed.Models.Product>)ViewBag.Products;
                        <div class="form-group">
                            <label class="col-sm-3 control-label no-padding-top" for="duallist"> Kéo thả sản phẩm vào ô bên phải </label>

                            <div class="col-sm-8">
                                <select multiple="multiple" size="10" name="duallistbox_demo1[]" id="duallist" onchange="AddProductToProductCategory(this)">
                                    @foreach (var item in products) {
                                        <option value="@item.Id" @(Model.Products.Contains(item) ? "selected='selected'" : "")>@item.Name</option>
                                    }
                                </select>
                                <div class="hr hr-16 hr-dotted"></div>
                            </div>
                        </div>
                    }
                </div>
                <div class="form-group" style="margin-right:0px">
                    <div class="pull-right">
                        <a href="@Href("~/Admin/Category")" class="btn btn-warning btn-sm"><i class="fa fa-reply"></i> Trở về danh sách</a>
                        <button type="submit" name="btnSubmit" value="Exit" class="btn btn-primary btn-sm"><i class="fa fa-save"></i> Lưu</button>
                        <button type="submit" name="btnSubmit" value="Continue" class="btn btn-success btn-sm"><i class="fa fa-save"></i> Lưu và tiếp tục chỉnh sửa</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


@section styles{
    <link href="~/Areas/Admin/Assets/bootstrap-touchspin/jquery.bootstrap-touchspin.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/Areas/Admin/Assets/css/bootstrap-duallistbox.min.css" />
}
@section scripts{
    <script src="~/Areas/Admin/Assets/ckeditor/ckeditor.js"></script>
    <script src="~/Areas/Admin/Assets/ckeditor/lang/vi.js"></script>
    <script src="~/Areas/Admin/Assets/ckfinder/ckfinder.js"></script>
    <script src="~/Areas/Admin/Assets/bootstrap-touchspin/jquery.bootstrap-touchspin.js"></script>
    <script src="~/Areas/Admin/Assets/js/jquery.bootstrap-duallistbox.min.js"></script>

    <script>
        $(document).ready(function () {
            $("input[name='OrderNo']").TouchSpin({
                verticalbuttons: true,
                verticalupclass: 'glyphicon glyphicon-plus',
                verticaldownclass: 'glyphicon glyphicon-minus'
            });
            var editor = CKEDITOR.replace('Description', {
                height: 400
            });
            CKFinder.setupCKEditor(editor, '/Areas/Admin/Assets/ckfinder');
        });
        function selectFileWithCKFinder(elementId) {
            // You can use the "CKFinder" class to render CKFinder in a page:
            var finder = new CKFinder();
            finder.basePath = '/Files';	// The path for the installation of CKFinder (default = "/ckfinder/").

            // This is a sample function which is called when a file is selected in CKFinder.
            finder.selectActionFunction = function (fileUrl) {
                document.getElementById(elementId).value = fileUrl;
            }
            finder.popup({
                chooseFiles: true,
                width: 800,
                height: 600
            });
        }

        jQuery(function ($) {
            var demo1 = $('select[name="duallistbox_demo1[]"]').bootstrapDualListbox({
                filterTextClear: 'Hiện tất cả',
                filterPlaceHolder: 'Bộ lọc',
                moveSelectedLabel: 'Di chuyển đã chọn',
                moveAllLabel: 'Di chuyển tất cả',
                removeSelectedLabel: 'Bỏ đã chọn',
                removeAllLabel: 'Xóa tất cả',
                infoText: 'Hiện tất cả ({0})',
                infoTextFiltered: '<span class="label label-purple label-lg">Đã lọc</span>',
                infoTextEmpty: 'Danh sách trống',
            });
            var container1 = demo1.bootstrapDualListbox('getContainer');
            container1.find('.btn').addClass('btn-white btn-info btn-bold');
        });
        function AddProductToProductCategory(sender) {
            var id = $(sender).val();
            var categoryId = $('#Id').val();
            var ids = ''

            if (id != null) {
                ids = id.join(',')
            }
            $.post('/Admin/Category/AddProductToProductCategory', { categoryId: categoryId, ids: ids }, function (res) {
                console.log(res);
            });
        }
    </script>
}